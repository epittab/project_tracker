{"ast":null,"code":"var _jsxFileName = \"/Users/enriquepittaluga/Desktop/Programming/Projects/projecttracker/Components/Weather.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { apiKey } from '../apikey';\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zipCode: `20002`,\n      countryCode: 'us',\n      isLoaded: false,\n      data: {\n        name: \"\",\n        initial: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    //useful for Async functions \n    this.getWeather().then(data => {\n      this.setState(_objectSpread({}, this.state, {\n        isLoaded: true,\n        data: data\n      }));\n    }); //runs after component renders\n\n    console.log(\"component did mount\");\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    //not in use\n    console.log(\"component did update\");\n  }\n\n  async getWeather() {\n    let APIkey = apiKey.weatherApiKey;\n    let URL = `http://api.openweathermap.org/data/2.5/weather?zip=${this.state.zipCode},${this.state.countryCode}&appid=${APIkey}&units=imperial`;\n\n    try {\n      const res = await fetch(URL);\n\n      if (res.ok) {\n        const data = await res.json();\n        console.log(data);\n        return data;\n      }\n\n      throw new Error('Error Message');\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  renderWidget() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"City: \", this.state.data.name, \" F\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Current Temperature: \", this.state.data.main.temp), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Weather: \", this.state.data.weather[0].main), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Humidity: \", this.state.data.main.humidity), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Wind Speed: \", this.state.data.wind.speed));\n  }\n\n  render() {\n    console.log(\"rendered\"); //render method should return JSX\n\n    return __jsx(\"div\", {\n      className: \"jsx-2822472847\" + \" \" + 'Weather',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" Weather \"), __jsx(\"p\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" - List types of consults\"), __jsx(\"p\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" - display retrieved information graphically \"), __jsx(\"div\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \" \", this.state.isLoaded ? this.renderWidget() : 'Loading...', \" \"), __jsx(\"br\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), __jsx(\"input\", {\n      id: \"zipCode-targeted\",\n      type: \"text\",\n      name: \"zipCode\",\n      value: this.state.zipCode,\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      className: \"jsx-2822472847\" + \" \" + 'zipCode-btn',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Submit\"), __jsx(\"br\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), __jsx(_JSXStyle, {\n      id: \"2822472847\",\n      __self: this\n    }, \"*.jsx-2822472847{margin:0;padding:0;box-sizing:border-box;}.Weather.jsx-2822472847{background-color:rgba(160,180,230,.8);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbnJpcXVlcGl0dGFsdWdhL0Rlc2t0b3AvUHJvZ3JhbW1pbmcvUHJvamVjdHMvcHJvamVjdHRyYWNrZXIvQ29tcG9uZW50cy9XZWF0aGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlIcUIsQUFHc0MsQUFPZCxTQU5lLFVBQ1ksbUJBSzFCLEdBSkEiLCJmaWxlIjoiL1VzZXJzL2VucmlxdWVwaXR0YWx1Z2EvRGVza3RvcC9Qcm9ncmFtbWluZy9Qcm9qZWN0cy9wcm9qZWN0dHJhY2tlci9Db21wb25lbnRzL1dlYXRoZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbmltcG9ydCB7YXBpS2V5fSBmcm9tICcuLi9hcGlrZXknXG5cbmNsYXNzIFdlYXRoZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnR7XG5cbiAgICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgICAgICBuYW1lOiBcIkVucmlxdWVcIlxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICB6aXBDb2RlOiBgMjAwMDJgLFxuICAgICAgICAgICAgY291bnRyeUNvZGU6ICd1cycsXG4gICAgICAgICAgICBpc0xvYWRlZDogZmFsc2UsXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICBpbml0aWFsOiBcIlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSAgICAgICBcbiAgICAgXG4gICAgICAgXG4gICAgfVxuXG4gICAgXG4gICAgY29tcG9uZW50RGlkTW91bnQoKXtcbiAgICAgICAgLy91c2VmdWwgZm9yIEFzeW5jIGZ1bmN0aW9ucyBcbiAgICAgICAgdGhpcy5nZXRXZWF0aGVyKCkudGhlbiggKCBkYXRhICkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgLi4udGhpcy5zdGF0ZSxcbiAgICAgICAgICAgICAgICBpc0xvYWRlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KTtcbiAgICAgICAgLy9ydW5zIGFmdGVyIGNvbXBvbmVudCByZW5kZXJzXG4gICAgICAgIGNvbnNvbGUubG9nKFwiY29tcG9uZW50IGRpZCBtb3VudFwiKVxuICAgIH1cblxuICAgIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMsIHByZXZTdGF0ZSwgc25hcHNob3Qpe1xuICAgICAgICAvL25vdCBpbiB1c2VcbiAgICAgICAgY29uc29sZS5sb2coXCJjb21wb25lbnQgZGlkIHVwZGF0ZVwiKVxuICAgIH1cbiAgICBcbiAgXG5cbiAgICBhc3luYyBnZXRXZWF0aGVyKCl7XG4gICAgICAgIGxldCBBUElrZXkgPSBhcGlLZXkud2VhdGhlckFwaUtleTtcbiAgICAgICAgbGV0IFVSTCA9IGBodHRwOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3ppcD0ke3RoaXMuc3RhdGUuemlwQ29kZX0sJHt0aGlzLnN0YXRlLmNvdW50cnlDb2RlfSZhcHBpZD0ke0FQSWtleX0mdW5pdHM9aW1wZXJpYWxgO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goVVJMKTtcbiAgICAgICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKVxuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIE1lc3NhZ2UnKTsgICAgXG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2goZXJyKXtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlcldpZGdldCgpe1xuICAgICAgICByZXR1cm4oXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxoMT5DaXR5OiB7dGhpcy5zdGF0ZS5kYXRhLm5hbWV9IEY8L2gxPlxuICAgICAgICAgICAgICAgIDxwPkN1cnJlbnQgVGVtcGVyYXR1cmU6IHt0aGlzLnN0YXRlLmRhdGEubWFpbi50ZW1wfTwvcD5cbiAgICAgICAgICAgICAgICA8cD5XZWF0aGVyOiB7dGhpcy5zdGF0ZS5kYXRhLndlYXRoZXJbMF0ubWFpbn08L3A+XG4gICAgICAgICAgICAgICAgPHA+SHVtaWRpdHk6IHt0aGlzLnN0YXRlLmRhdGEubWFpbi5odW1pZGl0eX08L3A+XG4gICAgICAgICAgICAgICAgPHA+V2luZCBTcGVlZDoge3RoaXMuc3RhdGUuZGF0YS53aW5kLnNwZWVkfTwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxuICAgIFxuXG4gICAgcmVuZGVyKCl7XG4gICAgICAgIGNvbnNvbGUubG9nKFwicmVuZGVyZWRcIilcbiAgICAgICAgLy9yZW5kZXIgbWV0aG9kIHNob3VsZCByZXR1cm4gSlNYXG4gICAgICAgIHJldHVybihcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lID0gJ1dlYXRoZXInPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxoMT4gV2VhdGhlciA8L2gxPlxuICAgICAgICAgICAgICAgICAgICA8cD4gLSBMaXN0IHR5cGVzIG9mIGNvbnN1bHRzPC9wPlxuICAgICAgICAgICAgICAgICAgICA8cD4gLSBkaXNwbGF5IHJldHJpZXZlZCBpbmZvcm1hdGlvbiBncmFwaGljYWxseSA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxkaXY+IHsgdGhpcy5zdGF0ZS5pc0xvYWRlZCA/IHRoaXMucmVuZGVyV2lkZ2V0KCkgOiAnTG9hZGluZy4uLicgfSA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8YnI+PC9icj4gXG5cbiAgICAgICAgICAgICAgICAgICAgPHA+PC9wPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0nemlwQ29kZS10YXJnZXRlZCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlID0gJ3RleHQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT0nemlwQ29kZSdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS56aXBDb2RlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L2lucHV0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxicj48L2JyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9J3ppcENvZGUtYnRuJz5TdWJtaXQ8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgPGJyPjwvYnI+IFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxzdHlsZSBqc3g+XG4gICAgICAgICAgICAgICAgICAgIHtgXG4gICAgICAgICAgICAgICAgICAgICAgICAqe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC5XZWF0aGVye1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYwLCAxODAsIDIzMCwgLjgpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGB9XG4gICAgICAgICAgICAgICAgPC9zdHlsZT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBXZWF0aGVyOyJdfQ== */\\n/*@ sourceURL=/Users/enriquepittaluga/Desktop/Programming/Projects/projecttracker/Components/Weather.js */\"));\n  }\n\n}\n\n_defineProperty(Weather, \"defaultProps\", {\n  name: \"Enrique\"\n});\n\nexport default Weather;","map":{"version":3,"sources":["/Users/enriquepittaluga/Desktop/Programming/Projects/projecttracker/Components/Weather.js"],"names":["React","fetch","apiKey","Weather","Component","constructor","props","state","zipCode","countryCode","isLoaded","data","name","initial","componentDidMount","getWeather","then","setState","console","log","componentDidUpdate","prevProps","prevState","snapshot","APIkey","weatherApiKey","URL","res","ok","json","Error","err","renderWidget","main","temp","weather","humidity","wind","speed","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport fetch from 'isomorphic-unfetch';\n\nimport {apiKey} from '../apikey'\n\nclass Weather extends React.Component{\n\n    static defaultProps = {\n        name: \"Enrique\"\n    }\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            zipCode: `20002`,\n            countryCode: 'us',\n            isLoaded: false,\n            data: {\n                name: \"\",\n                initial: \"\",\n            },\n        }       \n     \n       \n    }\n\n    \n    componentDidMount(){\n        //useful for Async functions \n        this.getWeather().then( ( data ) => {\n            this.setState({\n                ...this.state,\n                isLoaded: true,\n                data: data\n            })\n        });\n        //runs after component renders\n        console.log(\"component did mount\")\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n        //not in use\n        console.log(\"component did update\")\n    }\n    \n  \n\n    async getWeather(){\n        let APIkey = apiKey.weatherApiKey;\n        let URL = `http://api.openweathermap.org/data/2.5/weather?zip=${this.state.zipCode},${this.state.countryCode}&appid=${APIkey}&units=imperial`;\n        try {\n            const res = await fetch(URL);\n            if (res.ok) {\n                const data = await res.json();\n                console.log(data)\n                return data\n            }\n            throw new Error('Error Message');    \n        }\n        catch(err){\n            console.log(err)\n        }\n    }\n\n    renderWidget(){\n        return(\n            <div>\n                <h1>City: {this.state.data.name} F</h1>\n                <p>Current Temperature: {this.state.data.main.temp}</p>\n                <p>Weather: {this.state.data.weather[0].main}</p>\n                <p>Humidity: {this.state.data.main.humidity}</p>\n                <p>Wind Speed: {this.state.data.wind.speed}</p>\n            </div>\n        )\n    }\n    \n\n    render(){\n        console.log(\"rendered\")\n        //render method should return JSX\n        return(\n            <div className = 'Weather'>\n                \n                <div>\n                    <h1> Weather </h1>\n                    <p> - List types of consults</p>\n                    <p> - display retrieved information graphically </p>\n                    <div> { this.state.isLoaded ? this.renderWidget() : 'Loading...' } </div>\n\n                    <br></br> \n\n                    <p></p>\n                    \n                        <input id='zipCode-targeted'\n                            \n                            type = 'text'\n                            name='zipCode'\n                            value={this.state.zipCode}\n                            ></input>\n                            <br></br>\n                        <button className='zipCode-btn'>Submit</button>\n                \n                    \n\n                    <br></br> \n\n                    \n\n\n                </div>\n\n                <style jsx>\n                    {`\n                        *{\n                            margin: 0;\n                            padding: 0;\n                            box-sizing: border-box;\n                        }\n\n                        .Weather{\n                            background-color: rgba(160, 180, 230, .8)\n                        }\n                    `}\n                </style>\n            </div>\n        )\n    }\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}