{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/enriquepittaluga/Desktop/Programming/Projects/projecttracker/Components/Weather.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { apiKey } from '../apikey';\n\nvar Weather = /*#__PURE__*/function (_React$Component) {\n  _inherits(Weather, _React$Component);\n\n  function Weather(props) {\n    var _this;\n\n    _classCallCheck(this, Weather);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Weather).call(this, props));\n    _this.state = {\n      zipCode: \"22602\",\n      countryCode: 'us',\n      data: ''\n    };\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Weather, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var newInfo = this.getWeather();\n      this.setState({\n        data: newInfo\n      });\n      console.log(\"component did update\");\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {}\n  }, {\n    key: \"getWeather\",\n    value: function getWeather() {\n      var APIkey, URL, res, data;\n      return _regeneratorRuntime.async(function getWeather$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              APIkey = apiKey.weatherApiKey;\n              URL = \"http://api.openweathermap.org/data/2.5/weather?zip=\".concat(this.state.zipCode, \",\").concat(this.state.countryCode, \"&appid=\").concat(APIkey);\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(URL));\n\n            case 5:\n              res = _context.sent;\n\n              if (!res.ok) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 9:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                weat: data.name\n              });\n\n            case 11:\n              throw new Error('Error Message');\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[2, 14]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"rendered\"); //render method should return JSX\n\n      return __jsx(\"div\", {\n        className: \"jsx-2822472847\" + \" \" + 'Weather',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"jsx-2822472847\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        className: \"jsx-2822472847\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" Weather \"), __jsx(\"p\", {\n        className: \"jsx-2822472847\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" - List types of consults\"), __jsx(\"p\", {\n        className: \"jsx-2822472847\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \" - display retrieved information graphically \"), __jsx(\"p\", {\n        className: \"jsx-2822472847\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \" hello \", this.state.data, \" \"), __jsx(\"button\", {\n        onClick: this.loadData,\n        className: \"jsx-2822472847\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Click Me!\")), __jsx(_JSXStyle, {\n        id: \"2822472847\",\n        __self: this\n      }, \"*.jsx-2822472847{margin:0;padding:0;box-sizing:border-box;}.Weather.jsx-2822472847{background-color:rgba(160,180,230,.8);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbnJpcXVlcGl0dGFsdWdhL0Rlc2t0b3AvUHJvZ3JhbW1pbmcvUHJvamVjdHMvcHJvamVjdHRyYWNrZXIvQ29tcG9uZW50cy9XZWF0aGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJFcUIsQUFHc0MsQUFPZCxTQU5lLFVBQ1ksbUJBSzFCLEdBSkEiLCJmaWxlIjoiL1VzZXJzL2VucmlxdWVwaXR0YWx1Z2EvRGVza3RvcC9Qcm9ncmFtbWluZy9Qcm9qZWN0cy9wcm9qZWN0dHJhY2tlci9Db21wb25lbnRzL1dlYXRoZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbmltcG9ydCB7YXBpS2V5fSBmcm9tICcuLi9hcGlrZXknXG5cbmNsYXNzIFdlYXRoZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnR7XG5cbiAgICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgICAgICBuYW1lOiBcIkVucmlxdWVcIlxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG5cbiAgICAgICAgICAgIHppcENvZGU6IGAyMjYwMmAsXG4gICAgICAgICAgICBjb3VudHJ5Q29kZTogJ3VzJyxcbiAgICAgICAgICAgIGRhdGE6ICcnXG4gICAgICAgIH0gICAgICAgXG4gICAgICAgIHRoaXMubG9hZERhdGEgPSB0aGlzLmxvYWREYXRhLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcywgcHJldlN0YXRlLCBzbmFwc2hvdCl7XG4gICAgICAgIGxldCBuZXdJbmZvID0gdGhpcy5nZXRXZWF0aGVyKCk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZGF0YTogbmV3SW5mb1xuICAgICAgICB9KVxuICAgICAgICBjb25zb2xlLmxvZyhcImNvbXBvbmVudCBkaWQgdXBkYXRlXCIpXG4gICAgfVxuICAgIFxuICAgIGxvYWREYXRhKCl7XG5cbiAgICB9XG4gICAgXG4gICAgYXN5bmMgZ2V0V2VhdGhlcigpe1xuICAgICAgICBsZXQgQVBJa2V5ID0gYXBpS2V5LndlYXRoZXJBcGlLZXk7XG4gICAgICAgIGxldCBVUkwgPSBgaHR0cDovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj96aXA9JHt0aGlzLnN0YXRlLnppcENvZGV9LCR7dGhpcy5zdGF0ZS5jb3VudHJ5Q29kZX0mYXBwaWQ9JHtBUElrZXl9YDtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goVVJMKTtcbiAgICAgICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICAgICAgICAgICAgICByZXR1cm4ge3dlYXQ6IGRhdGEubmFtZX1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRXJyb3IgTWVzc2FnZScpOyAgICBcbiAgICAgICAgfVxuICAgICAgICBjYXRjaChlcnIpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyKCl7XG4gICAgICAgIGNvbnNvbGUubG9nKFwicmVuZGVyZWRcIilcbiAgICAgICAgLy9yZW5kZXIgbWV0aG9kIHNob3VsZCByZXR1cm4gSlNYXG4gICAgICAgIHJldHVybihcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lID0gJ1dlYXRoZXInPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxoMT4gV2VhdGhlciA8L2gxPlxuICAgICAgICAgICAgICAgICAgICA8cD4gLSBMaXN0IHR5cGVzIG9mIGNvbnN1bHRzPC9wPlxuICAgICAgICAgICAgICAgICAgICA8cD4gLSBkaXNwbGF5IHJldHJpZXZlZCBpbmZvcm1hdGlvbiBncmFwaGljYWxseSA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwPiBoZWxsbyB7dGhpcy5zdGF0ZS5kYXRhfSA8L3A+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMubG9hZERhdGF9PlxuICAgICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgTWUhXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxzdHlsZSBqc3g+XG4gICAgICAgICAgICAgICAgICAgIHtgXG4gICAgICAgICAgICAgICAgICAgICAgICAqe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC5XZWF0aGVye1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYwLCAxODAsIDIzMCwgLjgpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGB9XG4gICAgICAgICAgICAgICAgPC9zdHlsZT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBXZWF0aGVyOyJdfQ== */\\n/*@ sourceURL=/Users/enriquepittaluga/Desktop/Programming/Projects/projecttracker/Components/Weather.js */\"));\n    }\n  }]);\n\n  return Weather;\n}(React.Component);\n\n_defineProperty(Weather, \"defaultProps\", {\n  name: \"Enrique\"\n});\n\nexport default Weather;","map":{"version":3,"sources":["/Users/enriquepittaluga/Desktop/Programming/Projects/projecttracker/Components/Weather.js"],"names":["React","fetch","apiKey","Weather","props","state","zipCode","countryCode","data","loadData","bind","prevProps","prevState","snapshot","newInfo","getWeather","setState","console","log","APIkey","weatherApiKey","URL","res","ok","json","weat","name","Error","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAAQC,MAAR,QAAqB,WAArB;;IAEMC,O;;;AAMF,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,iFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AAETC,MAAAA,OAAO,SAFE;AAGTC,MAAAA,WAAW,EAAE,IAHJ;AAITC,MAAAA,IAAI,EAAE;AAJG,KAAb;AAMA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AATc;AAUjB;;;;uCAEkBC,S,EAAWC,S,EAAWC,Q,EAAS;AAC9C,UAAIC,OAAO,GAAG,KAAKC,UAAL,EAAd;AACA,WAAKC,QAAL,CAAc;AACVR,QAAAA,IAAI,EAAEM;AADI,OAAd;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;;+BAES,CAET;;;;;;;;;AAGOC,cAAAA,M,GAASjB,MAAM,CAACkB,a;AAChBC,cAAAA,G,gEAA4D,KAAKhB,KAAL,CAAWC,O,cAAW,KAAKD,KAAL,CAAWE,W,oBAAqBY,M;;;+CAGhGlB,KAAK,CAACoB,GAAD,C;;;AAAjBC,cAAAA,G;;mBACFA,GAAG,CAACC,E;;;;;;+CACeD,GAAG,CAACE,IAAJ,E;;;AAAbhB,cAAAA,I;+CACC;AAACiB,gBAAAA,IAAI,EAAEjB,IAAI,CAACkB;AAAZ,e;;;oBAEL,IAAIC,KAAJ,CAAU,eAAV,C;;;;;AAGNV,cAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;6BAIA;AACJD,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADI,CAEJ;;AACA,aACI;AAAA,4CAAiB,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,KAAKb,KAAL,CAAWG,IAAtB,MAJJ,EAMI;AAAQ,QAAA,OAAO,EAAE,KAAKC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANJ,CAFJ;AAAA;AAAA;AAAA,wuHADJ;AAkCH;;;;EApFiBT,KAAK,CAAC4B,S;;gBAAtBzB,O,kBAEoB;AAClBuB,EAAAA,IAAI,EAAE;AADY,C;;AAqF1B,eAAevB,OAAf","sourcesContent":["import React from 'react';\nimport fetch from 'isomorphic-unfetch';\n\nimport {apiKey} from '../apikey'\n\nclass Weather extends React.Component{\n\n    static defaultProps = {\n        name: \"Enrique\"\n    }\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n\n            zipCode: `22602`,\n            countryCode: 'us',\n            data: ''\n        }       \n        this.loadData = this.loadData.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n        let newInfo = this.getWeather();\n        this.setState({\n            data: newInfo\n        })\n        console.log(\"component did update\")\n    }\n    \n    loadData(){\n\n    }\n    \n    async getWeather(){\n        let APIkey = apiKey.weatherApiKey;\n        let URL = `http://api.openweathermap.org/data/2.5/weather?zip=${this.state.zipCode},${this.state.countryCode}&appid=${APIkey}`;\n\n        try {\n            const res = await fetch(URL);\n            if (res.ok) {\n                const data = await res.json();\n                return {weat: data.name}\n            }\n            throw new Error('Error Message');    \n        }\n        catch(err){\n            console.log(err)\n        }\n    }\n\n    render(){\n        console.log(\"rendered\")\n        //render method should return JSX\n        return(\n            <div className = 'Weather'>\n                \n                <div>\n                    <h1> Weather </h1>\n                    <p> - List types of consults</p>\n                    <p> - display retrieved information graphically </p>\n                    <p> hello {this.state.data} </p>\n                    \n                    <button onClick={this.loadData}>\n                        Click Me!\n                    </button>\n\n\n\n\n\n                </div>\n\n                <style jsx>\n                    {`\n                        *{\n                            margin: 0;\n                            padding: 0;\n                            box-sizing: border-box;\n                        }\n\n                        .Weather{\n                            background-color: rgba(160, 180, 230, .8)\n                        }\n                    `}\n                </style>\n            </div>\n        )\n    }\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}