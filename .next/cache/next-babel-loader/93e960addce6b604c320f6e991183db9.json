{"ast":null,"code":"var _jsxFileName = \"/Users/enriquepittaluga/Desktop/Programming/Projects/projecttracker/Components/Weather.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { apiKey } from '../apikey';\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zipCode: `22602`,\n      countryCode: 'us',\n      data: \"1\"\n    };\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount() {\n    //useful for Async functions \n    this.getWeather().then(data => {\n      this.setState(_objectSpread({}, this.state, {\n        data: data.cod\n      }));\n    }); //runs after component renders\n\n    console.log(\"component did mount\");\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    //not in use\n    console.log(\"component did update\");\n  }\n\n  async getWeather() {\n    let APIkey = apiKey.weatherApiKey;\n    let URL = `http://api.openweathermap.org/data/2.5/weather?zip=${this.state.zipCode},${this.state.countryCode}&appid=${APIkey}`;\n\n    try {\n      const res = await fetch(URL);\n\n      if (res.ok) {\n        const data = await res.json();\n        console.log(data);\n        return data;\n      }\n\n      throw new Error('Error Message');\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  loadData() {\n    let newInfo = this.getWeather();\n    console.log(newInfo);\n    this.setState(_objectSpread({}, this.state, {\n      data: newInfo.cod\n    }));\n    console.log(newInfo.cod);\n  }\n\n  render() {\n    console.log(\"rendered\"); //render method should return JSX\n\n    return __jsx(\"div\", {\n      className: \"jsx-2822472847\" + \" \" + 'Weather',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" Weather \"), __jsx(\"p\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" - List types of consults\"), __jsx(\"p\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" - display retrieved information graphically \"), __jsx(\"p\", {\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" hello \", this.state.data, \" \"), __jsx(\"button\", {\n      onClick: this.loadData,\n      className: \"jsx-2822472847\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Click Me!\")), __jsx(_JSXStyle, {\n      id: \"2822472847\",\n      __self: this\n    }, \"*.jsx-2822472847{margin:0;padding:0;box-sizing:border-box;}.Weather.jsx-2822472847{background-color:rgba(160,180,230,.8);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbnJpcXVlcGl0dGFsdWdhL0Rlc2t0b3AvUHJvZ3JhbW1pbmcvUHJvamVjdHMvcHJvamVjdHRyYWNrZXIvQ29tcG9uZW50cy9XZWF0aGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStGcUIsQUFHc0MsQUFPZCxTQU5lLFVBQ1ksbUJBSzFCLEdBSkEiLCJmaWxlIjoiL1VzZXJzL2VucmlxdWVwaXR0YWx1Z2EvRGVza3RvcC9Qcm9ncmFtbWluZy9Qcm9qZWN0cy9wcm9qZWN0dHJhY2tlci9Db21wb25lbnRzL1dlYXRoZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbmltcG9ydCB7YXBpS2V5fSBmcm9tICcuLi9hcGlrZXknXG5cbmNsYXNzIFdlYXRoZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnR7XG5cbiAgICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgICAgICBuYW1lOiBcIkVucmlxdWVcIlxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG5cbiAgICAgICAgICAgIHppcENvZGU6IGAyMjYwMmAsXG4gICAgICAgICAgICBjb3VudHJ5Q29kZTogJ3VzJyxcbiAgICAgICAgICAgIGRhdGE6IFwiMVwiLFxuICAgICAgICB9ICAgICAgIFxuICAgICAgICB0aGlzLmxvYWREYXRhID0gdGhpcy5sb2FkRGF0YS5iaW5kKHRoaXMpO1xuICAgIH1cblxuICAgIFxuICAgIGNvbXBvbmVudERpZE1vdW50KCl7XG4gICAgICAgIC8vdXNlZnVsIGZvciBBc3luYyBmdW5jdGlvbnMgXG5cbiAgICAgICAgdGhpcy5nZXRXZWF0aGVyKCkudGhlbiggKCBkYXRhICkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgLi4udGhpcy5zdGF0ZSxcbiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLmNvZFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgICAgIC8vcnVucyBhZnRlciBjb21wb25lbnQgcmVuZGVyc1xuICAgICAgICBjb25zb2xlLmxvZyhcImNvbXBvbmVudCBkaWQgbW91bnRcIilcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzLCBwcmV2U3RhdGUsIHNuYXBzaG90KXtcbiAgICAgICAgLy9ub3QgaW4gdXNlXG4gICAgICAgIGNvbnNvbGUubG9nKFwiY29tcG9uZW50IGRpZCB1cGRhdGVcIilcbiAgICB9XG4gICAgXG4gIFxuXG4gICAgYXN5bmMgZ2V0V2VhdGhlcigpe1xuICAgICAgICBsZXQgQVBJa2V5ID0gYXBpS2V5LndlYXRoZXJBcGlLZXk7XG4gICAgICAgIGxldCBVUkwgPSBgaHR0cDovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj96aXA9JHt0aGlzLnN0YXRlLnppcENvZGV9LCR7dGhpcy5zdGF0ZS5jb3VudHJ5Q29kZX0mYXBwaWQ9JHtBUElrZXl9YDtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goVVJMKTtcbiAgICAgICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKVxuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIE1lc3NhZ2UnKTsgICAgXG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2goZXJyKXtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGxvYWREYXRhKCl7XG4gICAgICAgIGxldCBuZXdJbmZvID0gdGhpcy5nZXRXZWF0aGVyKCk7XG4gICAgICAgIGNvbnNvbGUubG9nKG5ld0luZm8pXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgLi4udGhpcy5zdGF0ZSxcbiAgICAgICAgICAgIGRhdGE6IG5ld0luZm8uY29kXG4gICAgICAgIH0pXG4gICAgICAgIGNvbnNvbGUubG9nKG5ld0luZm8uY29kKVxuICAgIH1cblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zb2xlLmxvZyhcInJlbmRlcmVkXCIpXG4gICAgICAgIC8vcmVuZGVyIG1ldGhvZCBzaG91bGQgcmV0dXJuIEpTWFxuICAgICAgICByZXR1cm4oXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZSA9ICdXZWF0aGVyJz5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICA8aDE+IFdlYXRoZXIgPC9oMT5cbiAgICAgICAgICAgICAgICAgICAgPHA+IC0gTGlzdCB0eXBlcyBvZiBjb25zdWx0czwvcD5cbiAgICAgICAgICAgICAgICAgICAgPHA+IC0gZGlzcGxheSByZXRyaWV2ZWQgaW5mb3JtYXRpb24gZ3JhcGhpY2FsbHkgPC9wPlxuICAgICAgICAgICAgICAgICAgICA8cD4gaGVsbG8ge3RoaXMuc3RhdGUuZGF0YX0gPC9wPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmxvYWREYXRhfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIENsaWNrIE1lIVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8c3R5bGUganN4PlxuICAgICAgICAgICAgICAgICAgICB7YFxuICAgICAgICAgICAgICAgICAgICAgICAgKntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAuV2VhdGhlcntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MCwgMTgwLCAyMzAsIC44KVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgICAgIDwvc3R5bGU+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgV2VhdGhlcjsiXX0= */\\n/*@ sourceURL=/Users/enriquepittaluga/Desktop/Programming/Projects/projecttracker/Components/Weather.js */\"));\n  }\n\n}\n\n_defineProperty(Weather, \"defaultProps\", {\n  name: \"Enrique\"\n});\n\nexport default Weather;","map":{"version":3,"sources":["/Users/enriquepittaluga/Desktop/Programming/Projects/projecttracker/Components/Weather.js"],"names":["React","fetch","apiKey","Weather","Component","constructor","props","state","zipCode","countryCode","data","loadData","bind","componentDidMount","getWeather","then","setState","cod","console","log","componentDidUpdate","prevProps","prevState","snapshot","APIkey","weatherApiKey","URL","res","ok","json","Error","err","newInfo","render","name"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAAQC,MAAR,QAAqB,WAArB;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AAMjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAETC,MAAAA,OAAO,EAAG,OAFD;AAGTC,MAAAA,WAAW,EAAE,IAHJ;AAITC,MAAAA,IAAI,EAAE;AAJG,KAAb;AAMA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAGDC,EAAAA,iBAAiB,GAAE;AACf;AAEA,SAAKC,UAAL,GAAkBC,IAAlB,CAA0BL,IAAF,IAAY;AAChC,WAAKM,QAAL,mBACO,KAAKT,KADZ;AAEIG,QAAAA,IAAI,EAAEA,IAAI,CAACO;AAFf;AAIH,KALD,EAHe,CASf;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAgC;AAC9C;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAID,QAAML,UAAN,GAAkB;AACd,QAAIU,MAAM,GAAGtB,MAAM,CAACuB,aAApB;AACA,QAAIC,GAAG,GAAI,sDAAqD,KAAKnB,KAAL,CAAWC,OAAQ,IAAG,KAAKD,KAAL,CAAWE,WAAY,UAASe,MAAO,EAA7H;;AAEA,QAAI;AACA,YAAMG,GAAG,GAAG,MAAM1B,KAAK,CAACyB,GAAD,CAAvB;;AACA,UAAIC,GAAG,CAACC,EAAR,EAAY;AACR,cAAMlB,IAAI,GAAG,MAAMiB,GAAG,CAACE,IAAJ,EAAnB;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,eAAOA,IAAP;AACH;;AACD,YAAM,IAAIoB,KAAJ,CAAU,eAAV,CAAN;AACH,KARD,CASA,OAAMC,GAAN,EAAU;AACNb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACH;AACJ;;AAEDpB,EAAAA,QAAQ,GAAE;AACN,QAAIqB,OAAO,GAAG,KAAKlB,UAAL,EAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYa,OAAZ;AACA,SAAKhB,QAAL,mBACO,KAAKT,KADZ;AAEIG,MAAAA,IAAI,EAAEsB,OAAO,CAACf;AAFlB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYa,OAAO,CAACf,GAApB;AACH;;AAEDgB,EAAAA,MAAM,GAAE;AACJf,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADI,CAEJ;;AACA,WACI;AAAA,0CAAiB,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKZ,KAAL,CAAWG,IAAtB,MAJJ,EAMI;AAAQ,MAAA,OAAO,EAAE,KAAKC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,CAFJ;AAAA;AAAA;AAAA,s2IADJ;AAkCH;;AAxGgC;;gBAA/BR,O,kBAEoB;AAClB+B,EAAAA,IAAI,EAAE;AADY,C;;AAyG1B,eAAe/B,OAAf","sourcesContent":["import React from 'react';\nimport fetch from 'isomorphic-unfetch';\n\nimport {apiKey} from '../apikey'\n\nclass Weather extends React.Component{\n\n    static defaultProps = {\n        name: \"Enrique\"\n    }\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n\n            zipCode: `22602`,\n            countryCode: 'us',\n            data: \"1\",\n        }       \n        this.loadData = this.loadData.bind(this);\n    }\n\n    \n    componentDidMount(){\n        //useful for Async functions \n\n        this.getWeather().then( ( data ) => {\n            this.setState({\n                ...this.state,\n                data: data.cod\n            })\n        });\n        //runs after component renders\n        console.log(\"component did mount\")\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n        //not in use\n        console.log(\"component did update\")\n    }\n    \n  \n\n    async getWeather(){\n        let APIkey = apiKey.weatherApiKey;\n        let URL = `http://api.openweathermap.org/data/2.5/weather?zip=${this.state.zipCode},${this.state.countryCode}&appid=${APIkey}`;\n\n        try {\n            const res = await fetch(URL);\n            if (res.ok) {\n                const data = await res.json();\n                console.log(data)\n                return data\n            }\n            throw new Error('Error Message');    \n        }\n        catch(err){\n            console.log(err)\n        }\n    }\n\n    loadData(){\n        let newInfo = this.getWeather();\n        console.log(newInfo)\n        this.setState({\n            ...this.state,\n            data: newInfo.cod\n        })\n        console.log(newInfo.cod)\n    }\n\n    render(){\n        console.log(\"rendered\")\n        //render method should return JSX\n        return(\n            <div className = 'Weather'>\n                \n                <div>\n                    <h1> Weather </h1>\n                    <p> - List types of consults</p>\n                    <p> - display retrieved information graphically </p>\n                    <p> hello {this.state.data} </p>\n                    \n                    <button onClick={this.loadData}>\n                        Click Me!\n                    </button>\n\n\n\n\n\n                </div>\n\n                <style jsx>\n                    {`\n                        *{\n                            margin: 0;\n                            padding: 0;\n                            box-sizing: border-box;\n                        }\n\n                        .Weather{\n                            background-color: rgba(160, 180, 230, .8)\n                        }\n                    `}\n                </style>\n            </div>\n        )\n    }\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}